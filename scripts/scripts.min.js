class Anchors {
  constructor() {
    this.anchors = document.querySelectorAll('a');

    this.attachEvents();
  }

  attachEvents() {
    this.anchors.forEach(anchor => anchor.addEventListener('click', (event) => {
      this.onAnchorClick(event);
    }));
  }

  onAnchorClick(event) {
    const { hostname, hash } = event.target;
    const isExternal = location.hostname !== hostname;

    if (!isExternal) {
      event.preventDefault();

      const { offsetTop: top } = document.querySelector(hash);

      window.scrollTo({
        behavior: 'smooth',
        left: 0,
        top,
      });
    }
  }
}

new Anchors();

class BackToTop {
  constructor() {
    this.button = document.querySelector('.back-to-top');
    this.header = document.querySelector('.header');
    this.footer = document.querySelector('.footer');

    this.attachEvents();
  }

  attachEvents() {
    this.button.addEventListener('click', () => {
      window.scrollTo({
        behavior: 'smooth',
        left: 0,
        top: 0,
      });
    });

    window.addEventListener('scroll', () => {
      this.toggleButton();
      this.checkFooterOverlap();
    })
  }

  checkFooterOverlap() {
    const { top } = this.footer.getBoundingClientRect();
    const { innerHeight } = window;
    const footerPosition = top - innerHeight;

    if (footerPosition < 0) {
      this.button.style.transform = `translateY(${footerPosition}px)`;
    } else {
      this.button.style.transform = `translateY(0px)`;
    }
  }

  toggleButton() {
    const { top, height } = this.header.getBoundingClientRect();

    this.button.classList.toggle('is-show', height + top < 0);
  }
}

new BackToTop();

class Carousel {
  constructor() {
    this.carousel = document.querySelector('.carousel');
    this.images = this.carousel.querySelectorAll('img');
    this.caption = this.carousel.querySelector('figcaption');
    this.current = 0;
    this.animating = false;

    this.attachEvents();
  }

  attachEvents() {
    const leftArrow = this.carousel.querySelector('.carousel-left');
    const rightArrow = this.carousel.querySelector('.carousel-right');

    leftArrow.addEventListener('click', () => {
      if (!this.animating) {
        this.prev();
      }
    });

    rightArrow.addEventListener('click', () => {
      if (!this.animating) {
        this.next();
      }
    });

    this.carousel.classList.add('loaded');
  }

  next() {
    this.current++;

    if (this.current >= this.images.length) {
      this.current = 0;
    }

    this.animateImage('right');
  }

  prev() {
    this.current--;

    if (this.current < 0) {
      this.current = this.images.length - 1;
    }

    this.animateImage('left');
  }

  animateImage(from) {
    const image = this.images[this.current]
    const caption = image.getAttribute('alt');

    this.animating = true;

    this.caption.innerText = caption;

    image.classList.add(`from-${from}`);

    setTimeout(() => {
      image.classList.add('animating');
      image.classList.remove(`from-${from}`);

      image.addEventListener('transitionend', () => {
        const prevImage = this.carousel.querySelector('img.active');

        prevImage.classList.remove('active');
        image.classList.add('active');
        image.classList.remove('animating');

        this.animating = false;
      })
    });
  }
}

new Carousel();

class Contact {
  constructor() {
    this.form = document.querySelector('.contact');

    this.attachEvents();
  }

  attachEvents() {
    this.form.addEventListener('submit', (event) => {
      event.preventDefault();

      const data = this.serializeForm(event.target);
      // connect the form here
    })
  }

  serializeForm(form) {
    const serialized = [];

    // Loop through each field in the form
    for (let i = 0; i < form.elements.length; i++) {

      const field = form.elements[i];

      if (!field.name || field.disabled || field.type === 'submit' || field.type === 'button') continue;

      serialized.push(encodeURIComponent(field.name) + "=" + encodeURIComponent(field.value));
    }

    return serialized.join('&');
  };
}

// new Contact();

class Nav {
  constructor() {
    this.curtain = document.querySelector('.nav-curtain');
    this.hamburguer = document.querySelector('.nav-hamburger');
    this.nav = document.querySelector('.nav');
    this.close = this.nav.querySelector('.nav-close');
    this.anchors = this.nav.querySelectorAll('a');

    this.attachEvents();
  }

  attachEvents() {
    this.anchors.forEach(anchor => anchor.addEventListener('click', () => {
      this.closeNav();
    }));

    this.hamburguer.addEventListener('click', () => {
      this.nav.classList.add('is-open');
      this.curtain.classList.add('is-show');
    });

    this.curtain.addEventListener('click', () => {
      this.closeNav();
    });

    this.close.addEventListener('click', () => {
      this.closeNav();
    });
  }

  closeNav() {
    this.nav.classList.remove('is-open');
    this.curtain.classList.remove('is-show');
  }
}

new Nav();
